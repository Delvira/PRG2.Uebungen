/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prg2.übungen04;

import java.awt.BorderLayout;
import java.awt.Frame;
import java.awt.Button;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Caro
 */
public class Calculator extends Frame implements ActionListener {

    private Button button0 = new Button("0");
    private Button button1 = new Button("1");
    private Button button2 = new Button("2");
    private Button button3 = new Button("3");
    private Button button4 = new Button("4");
    private Button button5 = new Button("5");
    private Button button6 = new Button("6");
    private Button button7 = new Button("7");
    private Button button8 = new Button("8");
    private Button button9 = new Button("9");
    private Button buttonAdd = new Button("+");
    private Button buttonSub = new Button("-");
    private Button buttonMul = new Button("*");
    private Button buttonDiv = new Button("/");
    private Button buttonEqu = new Button("=");
    private Button buttonC = new Button("C");
    private Button buttonS = new Button("S");
    private TextField anzeige = new TextField("0");
    private GridLayout tasten = new GridLayout(5,4);
    private BorderLayout layout = new BorderLayout();
    private Panel tastenfeld = new Panel(tasten);
    
    private int operand1;
    private int operand2;
    private int result;
    private int operand;    //0  "Operator unbekannt", 1  +, 2  -, 3  *, 4  /
    
    private int state;      //1  arg1, 2  op, 3  arg2
    /**
     * Creates new form Calculator
     */
    public Calculator() {
        super("Rechner");
        initComponents();
        setSize(250,210);
        setResizable(false);
        setLayout(layout);
        anzeige.setEditable(false);
        anzeige.setBackground(Color.white);
        add(anzeige, BorderLayout.NORTH);
        add(tastenfeld, BorderLayout.SOUTH);
        tastenfeld.setLayout(tasten);
        tastenfeld.add(button7);
        tastenfeld.add(button8);
        tastenfeld.add(button9);
        tastenfeld.add(buttonDiv);
        tastenfeld.add(button4);
        tastenfeld.add(button5);
        tastenfeld.add(button6);
        tastenfeld.add(buttonMul);
        tastenfeld.add(button1);
        tastenfeld.add(button2);
        tastenfeld.add(button3);
        tastenfeld.add(buttonSub);
        tastenfeld.add(button0);
        tastenfeld.add(buttonS);
        tastenfeld.add(buttonEqu);
        tastenfeld.add(buttonAdd);
        tastenfeld.add(buttonC);
        
        button0.addActionListener(this);
        button1.addActionListener(this);
        button2.addActionListener(this);
        button3.addActionListener(this);
        button4.addActionListener(this);
        button5.addActionListener(this);
        button6.addActionListener(this);
        button7.addActionListener(this);
        button8.addActionListener(this);
        button9.addActionListener(this);
        buttonAdd.addActionListener(this);
        buttonSub.addActionListener(this);
        buttonMul.addActionListener(this);
        buttonDiv.addActionListener(this);
        buttonEqu.addActionListener(this);
        buttonC.addActionListener(this);
        buttonS.addActionListener(this);
        
        clear();
        
        setVisible(true);
    }
    
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Clear every operand and the textfield.
     */
    private void clear(){
        operand1 = 0;
        operand2 = 0;
        operand = 0;
        result = 0;
        anzeige.setText("0");
        state = 1;
        repaint();
    }
    
    /**
     * Calculate the result and set it as operand1.
     */
    private void calculate() {
        if (operand == 1) {
            result = operand1 + operand2;
        } else if (operand == 2) {
            result = operand1 - operand2;
        } else if (operand == 3) {
            result = operand1 * operand2;
        } else if (operand == 4) {
            result = operand1 / operand2;
        } else {
            state = 1;
        }
        operand1 = result;
        anzeige.setText("" + result);
        repaint();
    }
    
    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        
        switch(state) {
            case 1:
                switch(e.getActionCommand()) {
                    case "+":
                        operand = 1;
                        state = 2;
                        break;
                    case "-":
                        operand = 2;
                        state = 2;
                        break;
                    case "*":
                        operand = 3;
                        state = 2;
                        break;
                    case "/":
                        operand = 4;
                        state = 2;
                        break;
                    case "C":
                        clear();
                        break;
                    case "S":
                        operand1 = operand1 * (-1);
                        anzeige.setText("" +operand1);
                        repaint();
                        break;
                    case "=":
                        repaint();
                        break;
                    default:
                        operand1 = operand1 * 10 + (e.getActionCommand().charAt(0) - '0');
                        anzeige.setText("" + operand1);
                        repaint();
                        break;
                }
            break;
            case 2:
                switch (e.getActionCommand()) {
                    case "+":
                        operand = 1;
                        break;
                    case "-":
                        operand = 2;
                        break;
                    case "*":
                        operand = 3;
                        break;
                    case "/":
                        operand = 4;
                        break;
                    case "C":
                        clear();
                        break;
                    case "S":
                        operand1 = operand1 * (-1);
                        anzeige.setText("" + operand1);
                        repaint();
                        break;
                    case "=":
                        calculate();
                        break;
                    default:
                        operand2 = (e.getActionCommand().charAt(0) - '0');
                        state = 3;
                        anzeige.setText("" + operand2);
                        repaint();
                        break;
                }
            break;
            case 3:
                switch (e.getActionCommand()) {
                    case "+":
                        calculate();
                        operand = 1;
                        state = 2;
                        break;
                    case "-":
                        calculate();
                        operand = 2;
                        state = 2;
                        break;
                    case "*":
                        calculate();
                        operand = 3;
                        state = 2;
                        break;
                    case "/":
                        calculate();
                        operand = 4;
                        state = 2;
                        break;
                    case "C":
                        clear();
                        break;
                    case "S":
                        operand2 = operand2 * (-1);
                        anzeige.setText("" + operand2);
                        repaint();
                        break;
                    case "=":
                        calculate();
                        state = 2;
                        break;
                    default:
                        operand2 = operand2 * 10 + (e.getActionCommand().charAt(0) - '0');
                        anzeige.setText("" + operand2);
                        repaint();
                        break;
                }
            break;
        }  
    }
}
